const colorMap = {
  'abstract': { prefix: keywordPrefix, suffix: keywordSuffix },
  'assert': { prefix: keywordPrefix, suffix: keywordSuffix },
  'boolean': { prefix: keywordPrefix, suffix: keywordSuffix },
  'break': { prefix: keywordPrefix, suffix: keywordSuffix },
  'byte': { prefix: keywordPrefix, suffix: keywordSuffix },
  'case': { prefix: keywordPrefix, suffix: keywordSuffix },
  'catch': { prefix: keywordPrefix, suffix: keywordSuffix },
  'char': { prefix: keywordPrefix, suffix: keywordSuffix },
  'class': { prefix: keywordPrefix, suffix: keywordSuffix },
  'const': { prefix: keywordPrefix, suffix: keywordSuffix },
  'continue': { prefix: keywordPrefix, suffix: keywordSuffix },
  'default': { prefix: keywordPrefix, suffix: keywordSuffix },
  'do': { prefix: keywordPrefix, suffix: keywordSuffix },
  'double': { prefix: keywordPrefix, suffix: keywordSuffix },
  'else': { prefix: keywordPrefix, suffix: keywordSuffix },
  'enum': { prefix: keywordPrefix, suffix: keywordSuffix },
  'extends': { prefix: keywordPrefix, suffix: keywordSuffix },
  'final': { prefix: keywordPrefix, suffix: keywordSuffix },
  'finally': { prefix: keywordPrefix, suffix: keywordSuffix },
  'float': { prefix: keywordPrefix, suffix: keywordSuffix },
  'for': { prefix: keywordPrefix, suffix: keywordSuffix },
  'goto': { prefix: keywordPrefix, suffix: keywordSuffix },
  'if': { prefix: keywordPrefix, suffix: keywordSuffix },
  'implements': { prefix: keywordPrefix, suffix: keywordSuffix },
  'import': { prefix: keywordPrefix, suffix: keywordSuffix },
  'instanceof': { prefix: keywordPrefix, suffix: keywordSuffix },
  'int': { prefix: keywordPrefix, suffix: keywordSuffix },
  'interface': { prefix: keywordPrefix, suffix: keywordSuffix },
  'long': { prefix: keywordPrefix, suffix: keywordSuffix },
  'native': { prefix: keywordPrefix, suffix: keywordSuffix },
  'new': { prefix: keywordPrefix, suffix: keywordSuffix },
  'package': { prefix: keywordPrefix, suffix: keywordSuffix },
  'private': { prefix: keywordPrefix, suffix: keywordSuffix },
  'protected': { prefix: keywordPrefix, suffix: keywordSuffix },
  'public': { prefix: keywordPrefix, suffix: keywordSuffix },
  'return': { prefix: keywordPrefix, suffix: keywordSuffix },
  'short': { prefix: keywordPrefix, suffix: keywordSuffix },
  'static': { prefix: keywordPrefix, suffix: keywordSuffix },
  'strictfp': { prefix: keywordPrefix, suffix: keywordSuffix },
  'super': { prefix: keywordPrefix, suffix: keywordSuffix },
  'switch': { prefix: keywordPrefix, suffix: keywordSuffix },
  'synchronized': { prefix: keywordPrefix, suffix: keywordSuffix },
  'this': { prefix: keywordPrefix, suffix: keywordSuffix },
  'throw': { prefix: keywordPrefix, suffix: keywordSuffix },
  'throws	': { prefix: keywordPrefix, suffix: keywordSuffix },
  'transient	': { prefix: keywordPrefix, suffix: keywordSuffix },
  'try': { prefix: keywordPrefix, suffix: keywordSuffix },
  'void': { prefix: keywordPrefix, suffix: keywordSuffix },
  'volatile': { prefix: keywordPrefix, suffix: keywordSuffix },
  'while	': { prefix: keywordPrefix, suffix: keywordSuffix },
  
  'true':{ prefix: valuePrefix, suffix: valueSuffix },
  'false': { prefix: valuePrefix, suffix: valueSuffix },
  'null': { prefix: valuePrefix, suffix: valueSuffix },
};

